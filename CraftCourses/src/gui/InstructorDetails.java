package gui;

import database.DatabaseHelper;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import management.Craft;
import management.Instructor;

public class InstructorDetails extends javax.swing.JFrame {
    private static int instructorIDin;
    
    public InstructorDetails(int instructorID) {
        initComponents();
        InstructorDetails.instructorIDin = instructorID;
        Craft.displayAllInstructor(craftTable);
        Craft.displayAllCraftsOfInstructor(instructorIDin, craftsForInstructorTable);
        DatabaseHelper.displayAllWorkingHours(sessionsForInstructorTable, instructorID);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        timeLabel = new javax.swing.JLabel();
        craftsLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        timeList = new javax.swing.JList<>();
        daySpinner = new javax.swing.JSpinner();
        addSessionButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        sessionsForInstructorTable = new javax.swing.JTable();
        saveAndGoBackButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        craftsForInstructorTable = new javax.swing.JTable();
        addCraftButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        craftTable = new javax.swing.JTable();
        timeLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(249, 249, 249));

        timeLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(51, 50, 44));
        timeLabel.setText("Öğretmenin eğitim verebileceği zamanlar:");
        timeLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        craftsLabel.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        craftsLabel.setForeground(new java.awt.Color(51, 50, 44));
        craftsLabel.setText("Öğretmenin eğitim verebileceği dersler:");
        craftsLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        timeList.setBackground(new java.awt.Color(153, 181, 155));
        timeList.setForeground(new java.awt.Color(35, 39, 42));
        timeList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "09.00 - 10.00", "10.00 - 11.00", "11.00 - 12.00", "13.00 -14.00", "14.00 -15.00", "15.00 -16.00", "16.00 - 17.00" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(timeList);

        daySpinner.setModel(new javax.swing.SpinnerListModel(new String[] {"Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi", "Pazar"}));

        addSessionButton.setBackground(new java.awt.Color(125, 218, 114));
        addSessionButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        addSessionButton.setForeground(new java.awt.Color(51, 50, 44));
        addSessionButton.setText("Ekle");
        addSessionButton.setBorder(null);
        addSessionButton.setBorderPainted(false);
        addSessionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSessionButtonActionPerformed(evt);
            }
        });

        sessionsForInstructorTable.setBackground(new java.awt.Color(153, 181, 155));
        sessionsForInstructorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Gün", "Saat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(sessionsForInstructorTable);
        if (sessionsForInstructorTable.getColumnModel().getColumnCount() > 0) {
            sessionsForInstructorTable.getColumnModel().getColumn(0).setResizable(false);
            sessionsForInstructorTable.getColumnModel().getColumn(1).setResizable(false);
        }

        saveAndGoBackButton.setBackground(new java.awt.Color(125, 218, 114));
        saveAndGoBackButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        saveAndGoBackButton.setForeground(new java.awt.Color(51, 50, 44));
        saveAndGoBackButton.setText("Geri");
        saveAndGoBackButton.setBorder(null);
        saveAndGoBackButton.setBorderPainted(false);
        saveAndGoBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAndGoBackButtonActionPerformed(evt);
            }
        });

        craftsForInstructorTable.setBackground(new java.awt.Color(153, 181, 155));
        craftsForInstructorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ders İsmi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        craftsForInstructorTable.setName("Dersler"); // NOI18N
        jScrollPane5.setViewportView(craftsForInstructorTable);

        addCraftButton.setBackground(new java.awt.Color(125, 218, 114));
        addCraftButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        addCraftButton.setForeground(new java.awt.Color(51, 50, 44));
        addCraftButton.setText("Ekle");
        addCraftButton.setBorder(null);
        addCraftButton.setBorderPainted(false);
        addCraftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCraftButtonActionPerformed(evt);
            }
        });

        craftTable.setBackground(new java.awt.Color(153, 181, 155));
        craftTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ders İsmi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        craftTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        craftTable.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane4.setViewportView(craftTable);
        if (craftTable.getColumnModel().getColumnCount() > 0) {
            craftTable.getColumnModel().getColumn(0).setResizable(false);
            craftTable.getColumnModel().getColumn(1).setResizable(false);
        }

        timeLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        timeLabel1.setForeground(new java.awt.Color(51, 50, 44));
        timeLabel1.setText("Öğretmenin Verebileceği Dersler");
        timeLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 767, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(saveAndGoBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timeLabel)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(daySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addSessionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(addCraftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(craftsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(50, 50, 50))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(timeLabel1)
                .addGap(185, 185, 185))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(timeLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(craftsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addCraftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(timeLabel)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(daySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addSessionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveAndGoBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setLocationRelativeTo(null);
    }//GEN-LAST:event_formWindowOpened
    
    private void saveAndGoBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAndGoBackButtonActionPerformed
        dispose();
        new Dashboard().setVisible(true);
    }//GEN-LAST:event_saveAndGoBackButtonActionPerformed
    
    private void addCraftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCraftButtonActionPerformed
        int[] selectedRows = craftTable.getSelectedRows();
        
        if (selectedRows.length == 0) {
            JOptionPane.showMessageDialog(null, "Lütfen en az bir ders seçiniz!");
            return;
        }
        
        List<Integer> craftID = new ArrayList<>();
        
        for (int row : selectedRows) {
            int id = (int) craftTable.getValueAt(row, 0);
            craftID.add(id);
        }
        
        DatabaseHelper.addCraftsForInstructor(instructorIDin, craftID);
        
        dispose();
        new InstructorDetails(instructorIDin).setVisible(true);
    }//GEN-LAST:event_addCraftButtonActionPerformed

    private void addSessionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSessionButtonActionPerformed
        String dayValue = (String) daySpinner.getValue();
        String selectedTime = timeList.getSelectedValue();
        
        if (Instructor.workingHourDetailControl(dayValue, dayValue, selectedTime)) return;
        
        String[] daysOfWeek = {"Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi", "Pazar"};
        
        int dayNumericValue = -1;
        for (int i = 0; i < daysOfWeek.length; i++) {
            if (dayValue.equals(daysOfWeek[i])) {
                dayNumericValue = i + 1;
                break;
            }
        }
        
        String[] timeParts = selectedTime.split(" - ");
        String startTime = timeParts[0];
        
        int startHour = Integer.parseInt(startTime.split("\\.")[0]);
        
        DatabaseHelper.addWorkingHour(instructorIDin, dayNumericValue, startHour);
        
        dispose();
        new InstructorDetails(instructorIDin).setVisible(true);
    }//GEN-LAST:event_addSessionButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InstructorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InstructorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InstructorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InstructorDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InstructorDetails(instructorIDin).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCraftButton;
    private javax.swing.JButton addSessionButton;
    private javax.swing.JTable craftTable;
    private javax.swing.JTable craftsForInstructorTable;
    private javax.swing.JLabel craftsLabel;
    private javax.swing.JSpinner daySpinner;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton saveAndGoBackButton;
    private javax.swing.JTable sessionsForInstructorTable;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel timeLabel1;
    private javax.swing.JList<String> timeList;
    // End of variables declaration//GEN-END:variables
}
